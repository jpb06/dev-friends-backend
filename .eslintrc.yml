root: true

parser: '@typescript-eslint/parser'

parserOptions:
  project: './tsconfig.json'

plugins:
  - '@typescript-eslint'
  - prettier
  - import

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:prettier/recommended
  - plugin:import/typescript

env:
  es6: true
  browser: true
  jest: true
  node: true

rules:
  '@typescript-eslint/await-thenable': error
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/interface-name-prefix': off
  '@typescript-eslint/member-ordering': error
  '@typescript-eslint/no-confusing-non-null-assertion': error
  '@typescript-eslint/no-empty-interface': off
  '@typescript-eslint/no-extra-non-null-assertion': error
  '@typescript-eslint/no-non-null-assertion': error
  '@typescript-eslint/switch-exhaustiveness-check': error
  array-bracket-newline:
    - error
    - consistent
  array-bracket-spacing:
    - error
    - never
  array-callback-return: error
  block-spacing:
    - error
  brace-style: off
  camelcase:
    - off
    - properties: never
  complexity: error
  computed-property-spacing:
    - error
    - never
  curly:
    - error
    - all
  default-case: off
  default-case-last: off
  dot-location:
    - error
    - property
  dot-notation: error
  eqeqeq: error
  eol-last: error
  func-call-spacing:
    - error
    - never
  func-style: error
  key-spacing: error
  keyword-spacing: error
  lines-between-class-members: error
  newline-per-chained-call: off
  no-console:
    - error
    - allow:
        - warn
        - info
        - error
  no-dupe-keys: error
  no-else-return: error
  no-implicit-coercion: error
  no-invalid-this: error
  no-lonely-if: error
  no-multi-spaces: error
  no-return-await: error
  no-trailing-spaces: error
  no-useless-return: error
  no-unneeded-ternary: error
  prefer-arrow-callback:
    - error
  prefer-const: error
  prettier/prettier:
    - error
  template-curly-spacing:
    - error
    - never
  valid-typeof: error
  import/no-unresolved: off
  import/order:
    - error
    - newlines-between: always
      groups:
        - builtin
        - external
        - internal
        - [parent, sibling, index]
      alphabetize:
        order: 'asc'
      pathGroups:
        - pattern: '{@decorators/**,@modules/**,@type/**}'
          group: internal
          position: before
      pathGroupsExcludedImportTypes:
        - builtin
